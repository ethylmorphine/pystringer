version: "3.3"
services:

    nginx_front:
        image: nginx:1.21.6-alpine
        volumes:
            - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
        ports:
            - "127.0.0.1:80:80"
        networks:
            frontend:
                ipv4_address: 172.16.235.10
            backend:
                ipv4_address: 172.16.236.10
        entrypoint: ["nginx", "-c", "/etc/nginx/nginx.conf"]
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "http://127.0.0.1"]
            timeout: 10s
            interval: 10s
            retries: 10
        restart: on-failure

    flask_back:
        build:
            context: ./
            dockerfile: ./docker/Dockerfile.app
        image: pystringer
        expose:
            - "8888"
        networks:
            backend:
                ipv4_address: 172.16.236.11
        healthcheck:
            test: ["CMD", "echo", "'test'", "|", "nc", "172.16.236.11", "8888"]
            timeout: 10s
            interval: 10s
            retries: 10
        restart: on-failure

    prometheus:
        image: prom/prometheus:v2.21.0
        volumes:
            - ./docker/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
            - ./docker/alert.yaml:/etc/prometheus/alert.yaml:ro
        ports:
            - "127.0.0.1:9090:9090"
        networks:
            backend:
                ipv4_address: 172.16.236.12
        command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yaml

networks:
    frontend:
        ipam:
            driver: default
            config:
                - subnet: "172.16.235.0/24"

    backend:
        ipam:
            driver: default
            config:
                - subnet: "172.16.236.0/24"
